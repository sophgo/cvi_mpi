SHELL = /bin/bash
ifeq ($(PARAM_FILE), )
	PARAM_FILE:=../../../../mpi_param.mk
	include $(PARAM_FILE)
endif

TMP_FOLDER = $(CURDIR)/tmp
SDIR = $(CURDIR)/src
INCS = -I$(MW_INC) -I$(ISP_INC) -I$(SYS_INC) -Iinc -I../isp_algo/inc
OBJS = $(patsubst $(SDIR)/%.c, $(TMP_FOLDER)/%.o, $(wildcard $(SDIR)/*.c))
DEPS = $(patsubst $(SDIR)/%.c, $(TMP_FOLDER)/%.d, $(wildcard $(SDIR)/*.c))

TARGET_A = $(MW_LIB)/libisp.a
TARGET_SO = $(MW_LIB)/libisp.so

LOCAL_CFLAGS = $(INCS) -std=gnu11
LOCAL_LDFLAGS =

# Toolchain
ifeq ($(TARGET_MACHINE), riscv64-unknown-linux-gnu)
	LOCAL_CFLAGS += -DSDK_LIB_BIT=64
else ifeq ($(TARGET_MACHINE), riscv64-unknown-linux-musl)
	LOCAL_CFLAGS += -DSDK_LIB_BIT=64
else ifeq ($(TARGET_MACHINE), arm-linux-gnueabihf)
	LOCAL_CFLAGS += -DSDK_LIB_BIT=32
else
	LOCAL_CFLAGS += -DSDK_LIB_BIT=64
endif

.PHONY: clean all cleanall
.SILENT: update_isp_version

all: update_isp_version $(TARGET_A) $(TARGET_SO)

$(TMP_FOLDER)/%.o: $(SDIR)/%.c | $(TMP_FOLDER)
	@$(CC) $(CFLAGS) $(LOCAL_CFLAGS) -c $< -o $@
	@echo [$(notdir $(CC))] $(notdir $@)

$(TARGET_A): $(OBJS)
	@$(AR) $(ARFLAGS) $@ $(OBJS)
	@echo -e $(YELLOW)[LINK]$(END)[$(notdir $(AR))] $(notdir $(TARGET_A))

$(TARGET_SO): $(OBJS)
	@$(LD) $(LDFLAGS) $(LOCAL_LDFLAGS) -o $@ --start-group $(OBJS) --end-group
	@echo -e $(GREEN)[LINK]$(END)[$(notdir $(LD))] $(notdir $(TARGET_SO))

$(TMP_FOLDER):
	@echo "Create $(TMP_FOLDER) for object file"
	-@mkdir -p $(TMP_FOLDER)

clean:
	@rm -f $(OBJS) $(DEPS) $(TARGET_A) $(TARGET_SO)

cleanall: clean
	@rm -rf $(TMP_FOLDER)

update_isp_version:
	echo "#define ISP_VERSION \"T(Cvitek), V(Cvitek, Cvitek)\"" > $(CURDIR)/inc/isp_version.h

-include $(DEPS)
